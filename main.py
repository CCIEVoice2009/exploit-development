import sys
from datetime import datetime
from pattern.pattern_create import pattern_create
from pattern.pattern_offset import pattern_offset
from egg.egg_hunter_gen import egg_hunter_gen
from character.bad_chars import bad_chars

date = datetime.now()


def print_help():
    print("To Generate a Pattern")
    print("Usage: python3 main.py create 5000")
    print("To Find Offset")
    print("Usage: python3 main.py offset 0x90909090 ")
    print("To Generate EggHunter")
    print("Usage: python3 main.py egg 4 letter string")
    print("To Generate Bad Characters")
    print("Usage: python3 main.py badchars 0x00")


def create(length):
    pat = pattern_create(length)
    f = open("pattern.txt", "w+")
    f.write(
        "================================================================================\n"
        "\t\tOutput generated by main.py\n"
        "\t\tPlague Security - https://www.plaguesec.com\n"
        "================================================================================\n"
        "\t\tGenerated on " + str(date) + "\n"
        "================================================================================\n\n"
        "Pattern of " + str(length) + " bytes:\n"
        "------------------------\n"
        "" + pat + "\n"
    )
    f.close()
    return pat


def create_egg(byte_4):
    egg_ = egg_hunter_gen(egg_gen)
    keyword = egg_gen * 2
    print(egg_)
    f = open("egghunter.txt", "w+")
    f.write(
        "================================================================================\n"
        "\t\tOutput generated by main.py\n"
        "\t\tPlague Security - https://www.plaguesec.com\n"
        "================================================================================\n"
        "\t\tGenerated on " + str(date) + "\n"
        "\t\tFor more info about creating egg hunters visit\n"
        "http://www.hick.org/code/skape/papers/egghunt-shellcode.pdf\n"
        "================================================================================\n\n"
        "Generated Egg Hunter with {0} tag :".format(egg_gen) + "\n"
        "------------------------\n"
        "{0}".format(egg_) + ""
        "\n\nPut this tag in front of your shellcode : {0}".format(keyword) + "\n\n"
    )
    f.close()
    return egg_


def create_bad(string):
    badchars = bad_chars(om_badchars)
    f = open("badchars.txt", "w+")
    f.write(
        "================================================================================\n"
        "\t\tOutput generated by main.py\n"
        "\t\tPlague Security - https://www.plaguesec.com\n"
        "================================================================================\n"
        "\t\tGenerated on " + str(date) + "\n"
        "================================================================================\n\n"
        "badchars = (" + badchars + ")\n"
    )
    f.close()
    return badchars


if len(sys.argv[1]) < 2:
    print_help()
    sys.exit(0)

elif sys.argv[1] in ["-h", "--help"]:
    print_help()
    sys.exit(0)

elif sys.argv[1] == "create" and sys.argv[2].isdigit():
    length = int(sys.argv[2])
    length = create(length)
    print(length)

elif sys.argv[1] == "offset":
    print(pattern_offset(str(sys.argv[2])))

elif sys.argv[1] == "egg":
    egg_gen = str(sys.argv[2])
    egg_gen = create_egg(egg_gen)
    print(egg_gen)

elif sys.argv[1] == "badchars":
    om_badchars = sys.argv[2:]
    om_badchars = create_bad(om_badchars)
    print(om_badchars)

else:
    print_help()
    sys.exit(0)
